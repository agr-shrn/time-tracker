
oXML_Save(ByRef oXML, xmlpath) {
  ; oXML.Save(xmlpath)
  FileDelete, % xmlpath
  FileAppend, % TidyUp(oXML.xml), % xmlpath
}

oXML_Create(xmlpath, xmldata=False) {
  if !xmldata
  {
    xmldata =
    (Ltrim
      <?xml version="1.0" encoding="utf-8"?>
      <tracker-data>
      </tracker-data>
    )
  }

  oXML := ComObjCreate("MSXML2.DOMDocument.6.0")
  oXML.async := False
  oXML.preserveWhiteSpace := true

  if (doc := oXML.loadXML(xmldata))
    doc.Save(xmlpath)
  else
    Return False

  Return oXML
}

oXML_AddNode(ByRef oXML, ParentNode, ChildNode, NumItem=0) {
 oNode := oXML.createElement(ChildNode)
 oXML.getElementsByTagName(ParentNode).Item(NumItem).appendChild(oNode)
}

oXML_InsertText(ByRef oXML, NodeName, text, NumItem=0) {
 x := oXML.getElementsByTagName(NodeName).Item(NumItem)
 x.appendChild(oXML.createTextNode(text))
}

oXML_DeleteNode(ByRef oXML, NodeName, NumItem=0) {
 x := oXML.getElementsByTagName(NodeName).Item(NumItem)
 x.parentNode.removeChild(x)
}

spaces(amount) {
  Loop % amount
  t .= "   "
  return t
}

TidyUp(xml) { ; Cleans up Xml generated by XMLFile
  StringReplace, xml, xml, `r, , All
  StringReplace, xml, xml, `n, , All
  StringReplace, xml, xml, <?xml version="1.0"?>
  RegExMatch(xml, "\s??\<.*?\>", root), root := Trim(root, "`n ")
  StringReplace, xml, xml, % root
  StringReplace, xml, xml, %A_Tab%, , All
  xml := Trim(xml, " "), newXml := "<?xml version=""1.0""  encoding=""utf-8""?>`n" . root . "`n", indent := 1
  Loop, Parse, xml, <
  {
    if (!Trim(A_LoopField))
    Continue
    else if (cont)
    newXml .= "<" . A_LoopField . "`n", cont := 0

    else if (!InStr(A_LoopField, "/"))
    {
      if (SubStr(A_LoopField, 0) != ">")
      cont := 1, newXml .= spaces(indent) . "<" . A_LoopField
      else
      newXml .= spaces(indent) . "<" . A_LoopField . "`n", indent++
    }
    else
    {
      indent--, newXml .= spaces(indent) . "<" . A_LoopField . "`n"
    }
  }
  return newXml
}
